metis 套件文档

metis 是一个用于自动化图像识别和操作的 Python 库。它提供了一系列易于使用的方法，使得用户可以通过图像识别技术实现自动点击、滑动和按压操作。以下是关于 metis 的主要功能和使用方法的简要概述：

MetisClass

MetisClass 是 metis 的主要类，它包含了所有基本的图像识别和操作方法。要使用 metis，需要创建一个继承自 MetisClass 的子类，并根据需要实现自定义方法。

方法：

check_image_recognition(): 用于检查图像识别结果。
default_tap(): 在识别到的图像上执行点击操作。
default_swipe(): 在识别到的图像上执行滑动操作。
default_press(): 在识别到的图像上执行按压操作。
save_screenshot_compression(): 保存压缩后的屏幕截图。
crop_screenshot(): 裁剪并保存屏幕截图。
execute_time_sleep(): 等待指定时间。
ImageRecognitionParams

ImageRecognitionParams 是一个用于配置图像识别参数的类。用户可以根据需要自定义这个类，以便在 metis 的方法中使用。

参数：

screen_image_name: 屏幕截图的名称。
template_image_name: 模板图像的名称。
template_image_primary_dir: 模板图像的主要目录。
template_image_secondary_dir: 模板图像的次要目录。
is_refresh_screenshot: 是否刷新屏幕截图。
SaveParams

SaveParams 是一个用于配置保存参数的类。用户可以根据需要自定义这个类，以便在 metis 的方法中使用。

参数：

save_image_primary_dir: 保存图像的主要目录。
save_image_secondary_dir: 保存图像的次要目录。
save_image_name: 保存图像的名称。
is_refresh_screenshot: 是否刷新屏幕截图。
使用 metis 的典型步骤如下：

创建一个继承自 MetisClass 的子类。
根据需要自定义 ImageRecognitionParams 和 SaveParams 类。
在子类中实现所需的图像识别和操作方法。
创建子类的实例并调用相应的方法来执行脚本。
请参考之前提供的使用示例，了解如何在实际项目中使用 metis。